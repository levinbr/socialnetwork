{"version":3,"sources":["Redux/users-reducers.js","Components/Profile/Profile.module.css","img/preloader.gif","api/api.js","serviceWorker.js","Redux/profile-reducer.js","Redux/dialog-reducer.js","Redux/sidebar-reducer.js","Redux/auth-reducer.js","Redux/app-reducer.js","Redux/redux-store.js","Components/Navbar/Navbar.jsx","Components/Dialogs/Dialog/Dialog.jsx","Components/Dialogs/Message/Message.jsx","utils/validators/validators.js","Components/common/FormControls/FormControls.js","Components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","Components/Dialogs/DialogsContainer.jsx","Components/Profile/ProfileInfo/ProfileStatusHook.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx","Components/Header/Header.jsx","Components/Header/HeaderContainer.jsx","Components/Login/Login.jsx","App.js","index.js","Components/common/FormControls/FormConstrols.module.css","Components/Navbar/Navbar.module.css","Components/common/Preloader/Preloader.jsx","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Dialogs/Dialogs.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Header/Header.module.css"],"names":["initialState","users","currentPage","totalUsers","usersCount","isProgress","followingProgress","followSuccess","id","type","unFollowSuccess","setCurrentPage","setProgress","setFollowingProgress","isFetching","requestUsers","dispatch","a","usersAPI","getUsers","res","items","totalCount","unFollow","resultCode","follow","usersReducers","state","action","map","u","followed","filter","module","exports","instance","axios","create","withCredentials","baseURL","headers","get","then","data","userId","post","delete","getProfile","console","warn","profileAPI","getUserStatus","updateUserStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","myPosts","message","likes","profile","setUserStatus","profileReducer","newPost","text","newPostText","p","postId","dialogs","agentId","name","ava","messages","dialogReducer","messageText","sidebarReducer","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","sidebarPage","usersPage","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Navbar","className","styles","nav","item","to","activeClassName","activeLink","Dialog","props","adr","Message","required","val","maxLength","maxLen","length","Elem","input","meta","hasError","touched","error","formControl","maxLength15","Textarea2","NewMessageReduxForm","reduxForm","onSubmit","handleSubmit","Field","component","validate","Dialogs","newDialogs","dialog","newMessage","newMessageText","style","answer","dataForm","log","addNewMessage","textMessage","mapStateToProps","connect","Component","RedirectComponent","this","React","ProfileStatusHook","useState","editMode","setEditMode","setStatus","useEffect","profileInfo","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","ProfileInfo","src","photos","large","aboutMe","fullName","vk","Preloader","Post","maxLength10","PostReduxForm","placeholder","MyPosts","newPosts","formData","addPost","MyPostsContainer","Profile","content","ProfileContainer","params","authorizedUserID","history","push","getUserProfile","withRouter","Header","header","loginData","onClick","HeaderContainer","LoginReduxForm","formSummaryError","stopSubmit","_error","UserContainer","lazy","App","initializeApp","fallback","path","render","DialogsContainer","AppContainer","promise","Promise","all","MainApp","ReactDom","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","preloader"],"mappings":"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","file":"static/js/main.a5856a8b.chunk.js","sourcesContent":["import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS = 'SET_TOTAL_USERS';\r\nconst SET_PROGRESS = 'SET_PROGRESS';\r\nconst SET_FOLLOWING_PROGRESS = 'SET_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    currentPage: 1,\r\n    totalUsers: 0,\r\n    usersCount: 10,\r\n    isProgress: false,\r\n    followingProgress: []\r\n};\r\n\r\nconst usersReducers = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {...state, users: state.users.map( u => {\r\n                if (u.id === action.id) {\r\n                    return {...u, followed:true}\r\n                }\r\n                return u;\r\n                })};\r\n        case UNFOLLOW:\r\n            return {...state, users: state.users.map( u => {\r\n                    if (u.id === action.id) {\r\n                        return {...u, followed:false}\r\n                    }\r\n                    return u;\r\n                })};\r\n        case SET_USERS:\r\n            return {...state, users: [...action.users]}\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case SET_TOTAL_USERS:\r\n            return {...state, totalUsers: action.totalUsers}\r\n        case SET_PROGRESS:\r\n            return {...state, isProgress: action.isProgress}\r\n        case SET_FOLLOWING_PROGRESS:\r\n            return {...state, followingProgress: action.isFetching\r\n                    ? [...state.followingProgress, action.id]\r\n                    : [...state.followingProgress.filter(id => id !== action.id)]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (id) => ({type: FOLLOW, id:id});\r\nexport const unFollowSuccess = (id) => ({type: UNFOLLOW, id:id});\r\nexport const setUsers = (users) => ({type: SET_USERS, users:users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsers = (totalUsers) => ({type: SET_TOTAL_USERS, totalUsers});\r\nexport const setProgress = (isProgress) => ({type: SET_PROGRESS, isProgress});\r\nexport const setFollowingProgress = (isFetching, id) => ({type: SET_FOLLOWING_PROGRESS, isFetching, id});\r\n\r\n\r\nexport const requestUsers = (usersCount, currentPage) => {\r\n    return async (dispatch) => {\r\n        dispatch(setProgress(true));\r\n\r\n        const res = await usersAPI.getUsers(usersCount, currentPage)\r\n        dispatch(setProgress(false));\r\n        dispatch(setUsers(res.items));\r\n        dispatch(setTotalUsers(res.totalCount));\r\n    }\r\n}\r\nexport const unFollow = (id) => {\r\n    return async (dispatch) => {\r\n        dispatch(setFollowingProgress(true, id));\r\n\r\n        const res = await usersAPI.unFollow(id)\r\n        if (res.resultCode === 0) {\r\n            dispatch(unFollowSuccess(id));\r\n        }\r\n        dispatch(setFollowingProgress(false, id));\r\n    }\r\n}\r\nexport const follow = (id) => {\r\n    return async (dispatch) => {\r\n        dispatch(setFollowingProgress(true, id));\r\n        const res = await usersAPI.follow(id)\r\n        if (res.resultCode === 0) {\r\n            dispatch(followSuccess(id));\r\n        }\r\n        dispatch(setFollowingProgress(false, id));\r\n    }\r\n}\r\n\r\nexport default usersReducers;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backGroundPhoto\":\"Profile_backGroundPhoto__2jF-C\",\"content\":\"Profile_content__1UIkW\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.86bac7d5.gif\";","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"6956d242-cdbb-4297-88a6-01654f489cf3\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(usersCount = 1, currentPage= 10) {\r\n        return instance.get(`users?count=${usersCount}&page=${currentPage}`).then(res => {\r\n            return res.data;\r\n        });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`,{}).then(res => {\r\n            return res.data;\r\n        });\r\n    },\r\n    unFollow(userId) {\r\n        return instance.delete(`follow/${userId}`).then(res => {\r\n            return res.data;\r\n        });\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method')\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n};\r\nexport const profileAPI = {\r\n    getUserStatus(userId) {\r\n        return instance.get(`/profile/status/${userId}`)\r\n    },\r\n    updateUserStatus(status) {\r\n        return instance.put(`/profile/status`,{status: status})\r\n    },\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`,{email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst DELETE_POST = 'DELETE-POST';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_USER_STATUS = 'SET-USER-STATUS';\r\n\r\nlet initialState = {\r\n    myPosts:[\r\n        {message:'Привет! я выучил React!',likes:'28'},\r\n        {message:'Я люблю javascript',likes:'561'},\r\n        {message:'Хочу в отпуск!!!!',likes:'56'},\r\n        {message:'УРААААА Я ЭТО СДЕЛАЛЬ',likes:'21'}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                message: action.text,\r\n                likes:'0'\r\n            };\r\n            return {\r\n                ...state,\r\n                newPostText:'',\r\n                myPosts: [...state.myPosts, newPost]\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                myPosts: [...state.myPosts.filter(p => p !== action.postId)]\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        case SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPost = (text) => ({type: ADD_POST, text});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setUserStatus = (status) => ({type: SET_USER_STATUS, status});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const res = await usersAPI.getProfile(userId)\r\n    dispatch(setUserProfile(res.data));\r\n}\r\nexport const getUserStatus= (userId) => async (dispatch) => {\r\n    const res = await profileAPI.getUserStatus(userId)\r\n    dispatch(setUserStatus(res.data));\r\n}\r\nexport const updateUserStatus= (status) => async (dispatch) => {\r\n    const res = await profileAPI.updateUserStatus(status)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setUserStatus(status));\r\n    }\r\n}\r\nexport default profileReducer;\r\n","const ADD_NEW_MESSAGE_TEXT = 'ADD-NEW-MESSAGE-TEXT';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {agentId:1, name: 'Вася',ava:'https://cs16planet.ru/steam-avatars/images/avatar2700.jpg'},\r\n        {agentId:2, name: 'Петя',ava:'https://i.pinimg.com/736x/0c/a9/e2/0ca9e28dcb12dc698cfd2beda6d6fa64--youtube.jpg'},\r\n        {agentId:3, name: 'Гронколонкос',ava:'https://author.today/content/2020/01/15/70c3267634e848bdb6bab342a2d126c3.jpg'},\r\n        {agentId:4, name: 'Клава',ava:'https://cs2.livemaster.ru/storage/10/74/415c0ac5e5ce9ebdab6d659d56q2--dizajn-i-reklama-art-avatarka.jpg'}\r\n    ],\r\n    messages: [\r\n        {agentId:2, message:'Привет, а ты уже выучил React?'},\r\n        {agentId:2, message:'я уже да'},\r\n        {agentId:2, message:'Что следующее будешь изучать?'},\r\n        {agentId:2, message:'Закончил проект?'}\r\n    ],\r\n};\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case ADD_NEW_MESSAGE_TEXT:\r\n            return {...state,\r\n                    messages: [...state.messages, {agentId: 2, message: action.messageText}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addNewMessage = (text) => ({type: ADD_NEW_MESSAGE_TEXT, messageText: text});\r\n\r\nexport default dialogReducer;","\r\nlet initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_AUTH_USER_DATA = 'SET-AUTH-USER-DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                userId: action.payload.id,\r\n                login: action.payload.login,\r\n                email: action.payload.email,\r\n                isAuth: action.isAuth\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (payload, isAuth) => ({type: SET_AUTH_USER_DATA, payload, isAuth});\r\n\r\nexport const getAuthUserData  = () => async (dispatch) => {\r\n    const res = await authAPI.me()\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(res.data.data, true))\r\n    }\r\n}\r\nexport const login  = (email, password, rememberMe) => async (dispatch) => {\r\n    const res = await authAPI.login(email, password, rememberMe)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        dispatch(stopSubmit(\"login\", {_error: res.data.messages}));\r\n    }\r\n}\r\nexport const logout  = () => async (dispatch) => {\r\n   const res = await authAPI.logout()\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setAuthUserData({id: null, login: null, email: null}, false))\r\n    }\r\n}\r\nexport default authReducer;\r\n","\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp  = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\nexport default appReducer;\r\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogReducer from \"./dialog-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducers from \"./users-reducers\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogReducer,\r\n    sidebarPage: sidebarReducer,\r\n    usersPage: usersReducers,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n//const store = createStore(reducers, applyMiddleware(thunk)));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport styles from './Navbar.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n      <nav className={`${styles.nav} ${styles.item}`}>\r\n          <div>\r\n              <NavLink to='/profile' activeClassName={styles.activeLink}> Profile </NavLink>\r\n          </div>\r\n          <div>\r\n              <NavLink to='/dialogs' activeClassName={styles.activeLink}>Messages</NavLink>\r\n          </div>\r\n          <div>\r\n              <NavLink to='/users' activeClassName={styles.activeLink}>Users</NavLink>\r\n          </div>\r\n          <div>\r\n              <a>News</a>\r\n          </div>\r\n          <div>\r\n              <a>Music</a>\r\n          </div>\r\n          <div>\r\n              <a>Settings</a>\r\n          </div>\r\n      </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Dialog = (props) => {\r\n    const adr = '/dialogs/' + props.agentId\r\n    return (\r\n        <div>\r\n           <NavLink to={adr}> {props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog;","import React from 'react';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div>\r\n            {props.message}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Message;","export const required = (val) => {\r\n    if (val) return undefined;\r\n    return 'field is required';\r\n}\r\n\r\nexport const maxLength = (maxLen) => (val) => {\r\n    if (val && val.length > maxLen) return `max length ${maxLen}`;\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport styles from './FormConstrols.module.css';\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : null) }>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            { hasError && <span> {meta.error} </span> }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport const Elem = (Elem) => ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : null) }>\r\n            <div>\r\n                <Elem {...input} {...props} />\r\n            </div>\r\n            { hasError && <span> {meta.error} </span> }\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport Dialog from './Dialog/Dialog';\r\nimport Message from './Message/Message';\r\nimport style from './Dialogs.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../utils/validators/validators\";\r\nimport {Elem} from \"../common/FormControls/FormControls\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let newDialogs = props.state.dialogs.map ( dialog => <Dialog name={dialog.name} agentId={dialog.agentId}/>);\r\n    let newMessage = props.state.messages.map ( message => <Message message={message.message}/>);\r\n    let newMessageText = props.state.newMessageText;\r\n\r\n    let onUpdateMessageText = (e) => {\r\n        props.updateNewMessage(e.target.value);\r\n    };\r\n    let onAddMessage = (dataForm) => {\r\n        console.log(dataForm);\r\n        props.addNewMessage(dataForm.textMessage);\r\n    };\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div>\r\n                {newDialogs}\r\n            </div>\r\n            <div>\r\n                {newMessage}\r\n            </div>\r\n            <div className={style.answer}>\r\n                <NewMessageReduxForm onSubmit={onAddMessage}/>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength15 = maxLength(15)\r\nconst Textarea2 = Elem(\"textarea\")\r\n\r\nconst NewMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name={\"textMessage\"}\r\n                   component={Textarea2}\r\n                   validate={[required, maxLength15]}\r\n            />\r\n            <div>\r\n                <button> to answer </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewMessageReduxForm = reduxForm({form: \"newMessage\"})(NewMessageForm);\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps= (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect  = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","import React from 'react';\r\nimport {addNewMessage} from \"../../Redux/dialog-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        state: state.dialogsPage,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addNewMessage}),\r\n    withAuthRedirect\r\n)(Dialogs);","import React, {useEffect, useState} from 'react'\r\nimport style from './ProfileInfo.module.css'\r\n\r\n\r\nconst ProfileStatusHook = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    const openEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const closeEditMode = () =>  {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    return (\r\n        <div className={style.profileInfo}>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={openEditMode}> {props.status || 'Изменить статус'} </span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                       onChange={onStatusChange}\r\n                       onBlur={closeEditMode}\r\n                       value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusHook;\r\n","import React from 'react'\r\nimport style from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusHook from \"./ProfileStatusHook\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return (\r\n            <Preloader />\r\n        )\r\n    }\r\n    return (\r\n        <div className={style.profileInfo}>\r\n            <img src={props.profile.photos.large} />\r\n            <div>\r\n                {props.profile.aboutMe}\r\n                {props.profile.fullName}\r\n                {props.profile.vk}\r\n            </div>\r\n            <ProfileStatusHook status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport styles from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n      <div className={styles.post}>\r\n        <div className={styles.item}>\r\n          <img src='https://pm1.narvii.com/6889/74979d4d2744ec6e27995b6e866f091d04c0b40cr1-515-414v2_uhq.jpg' />\r\n          {props.message}\r\n        </div>\r\n        <div>\r\n          <span> Likes {props.likes} </span>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../utils/validators/validators\";\r\nimport {Elem} from \"../../common/FormControls/FormControls\";\r\n\r\nconst MyPosts = (props) => {\r\n  let newPosts = props.myPosts.map( post => {\r\n    return <Post message={post.message} likes={post.likes}/>\r\n  });\r\n\r\n  let addPost = (formData) => {\r\n      props.addPost(formData.newPost);\r\n  };\r\n\r\n  return (\r\n        <div>\r\n          <div>\r\n              Что нового?\r\n              <PostReduxForm onSubmit={addPost}/>\r\n          </div>\r\n          <div>\r\n            {newPosts}\r\n          </div>\r\n        </div>\r\n  );\r\n}\r\n\r\nconst maxLength10 = maxLength(10)\r\nconst Textarea2 = Elem(\"textarea\")\r\n\r\nconst PostForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name={\"newPost\"}\r\n                   component={Textarea2}\r\n                   validate={[required, maxLength10]}\r\n                   placeholder={'post message'}/>\r\n            <div>\r\n                <button> Add post </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst PostReduxForm = reduxForm({form: 'addPost'})(PostForm);\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport MyPosts from \"./MyPosts\";\r\nimport {addPost} from \"../../../Redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        myPosts: state.profilePage.myPosts\r\n\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,\r\n    {addPost})(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport styles from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n \r\n  return (\r\n      <div className={styles.content}>\r\n          <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n          <MyPostsContainer/>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import Profile from \"./Profile\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n            || this.props.authorizedUserID\r\n            || this.props.history.push(\"/login\");\r\n        if (userId) {\r\n            this.props.getUserProfile(userId)\r\n            this.props.getUserStatus(userId)\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return <Profile {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserID: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\r\n    withRouter,\r\n    //withAuthRedirect,\r\n)(ProfileContainer);\r\n","\r\nimport React from 'react';\r\nimport styles from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n      <header className={styles.header}>\r\n        <img src='http://pngimg.com/uploads/scar/scar_PNG15775.png' />\r\n        <div className={styles.loginData}>\r\n            {props.isAuth ?\r\n                <div> { props.login} - <button onClick={props.logout}> Log out </button> </div>\r\n                : <NavLink to='/login'> Sign In </NavLink> }\r\n        </div>\r\n\r\n\r\n\r\n      </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","\r\nimport React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData, logout} from \"../../Redux/auth-reducer\";\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.auth.userId,\r\n        login: state.auth.login,\r\n        email: state.auth.email,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,{getAuthUserData, logout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {Elem} from \"../common/FormControls/FormControls\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from '../common/FormControls/FormConstrols.module.css';\r\n\r\nconst input = Elem(\"input\")\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"email\"}\r\n                       component={input}\r\n                       name={\"email\"}\r\n                       validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field type=\"password\"\r\n                       placeholder={\"Password\"}\r\n                       component={input}\r\n                       name={\"password\"}\r\n                       validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    <Field type={\"checkbox\"}\r\n                           component={input}\r\n                           name={\"rememberMe\"}\r\n                    /> remember me\r\n                </label>\r\n            </div>\r\n            {props.error && <div className={ styles.formSummaryError }>\r\n                {props.error}\r\n            </div>\r\n            }\r\n\r\n            <div>\r\n                <button> SignIn </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/Profile\"} />\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React, {Suspense} from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar/Navbar';\nimport {BrowserRouter, HashRouter, Route, withRouter} from 'react-router-dom';\nimport DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport Login from \"./Components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./Redux/app-reducer\";\nimport Preloader from \"./Components/common/Preloader/Preloader\";\nimport store from \"./Redux/redux-store\";\nconst UserContainer = React.lazy(() => import('./Components/Users/UsersContainer'));\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader />\n        }\n\n        return (\n            <div className='wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='wrapper-content'>\n                    <Suspense fallback={<Preloader />}>\n                        <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                        <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                        <Route path='/users' render={() => <UserContainer/>}/>\n                        <Route path='/login' render={() => <Login/>}/>\n                    </Suspense>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nconst AppContainer = compose (\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst MainApp = (props) => {\n    return (\n        //todo:  Поменять на <BrowserRouter /> когда изменится хостинг\n        <HashRouter>\n            <Provider store={store}>\n                <AppContainer />\n            </Provider>\n        </HashRouter>\n    )\n}\n\nexport default MainApp;\n\n\n","import * as ServiceWorker from './serviceWorker';\nimport store from './Redux/redux-store';\nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport './index.css';\nimport MainApp from './App';\n\n    ReactDom.render(<MainApp />, document.getElementById('root'));\n\n    ServiceWorker.unregister();\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormConstrols_formControl__1lYAb\",\"error\":\"FormConstrols_error__2mUmN\",\"formSummaryError\":\"FormConstrols_formSummaryError__EA_9K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__6Ak4s\",\"item\":\"Navbar_item__u7bDf\",\"activeLink\":\"Navbar_activeLink__3N1LF\"};","import React from 'react';\r\nimport preloader from '../../../img/preloader.gif';\r\nconst Preloader = (props) => {\r\n    return (\r\n            <img src={preloader}/>\r\n    )\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__2sUQa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__24d11\",\"answer\":\"Dialogs_answer__1QBEF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3Ly-d\",\"item\":\"Post_item__2p16C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1Q14b\",\"loginData\":\"Header_loginData__Zg6pA\"};"],"sourceRoot":""}